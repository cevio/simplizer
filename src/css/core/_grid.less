/* === Grid === */
.container{
  padding: 0 @grid-gutter-width;
}
.row {
  .clearfix;
  margin:0 -@grid-gutter-width;
  > [class*="col-"] {
    box-sizing: border-box;
    float:left;
  }
}
@cols: @grid-cols;
.row {
  .col-auto {
    width: 100%;
  }
  .-(@i: length(@cols)) when (@i > 0) {
  @divider: e(extract(@cols, @i));
  @className: `Math.floor(@{divider})`;
  @n: `100/parseFloat(@{divider})`;
  @n-1: @n - 1;
  .col-@{className} {
    width: ~"@{divider}%";
    //width: ~"-webkit-calc((100% - 15px*@{n-1}) / @{n})";
    //width: ~"calc((100% - 15px*@{n-1}) / @{n})";
  }
  .-((@i - 1));
} .-;
  .--(@j: 1) when (@j < length(@cols)) {
  @divider: e(extract(@cols, @j));
  @className: `Math.floor(@{divider})`;
  .col-auto:nth-last-child(@{j}), .col-auto:nth-last-child(@{j}) ~ .col-auto {
    @j-1: @j - 1;
    width: 100% / @j;
    width: ~"-webkit-calc((100% - 15px*@{j-1}) / @{j})";
    width: ~"calc((100% - 15px*@{j-1}) / @{j})";
  }
  .--((@j + 1));
} .--;

}

@media all and (min-width:768px) {
  .row {
    .-(@i: length(@cols)) when (@i > 0) {
    @divider: e(extract(@cols, @i));
    @className: `Math.floor(@{divider})`;
    @n: `100/parseFloat(@{divider})`;
    @n-1: @n - 1;
    .tablet-@{className} {
      width: ~"@{divider}%";
    }
    .-((@i - 1));
  } .-;
    .--(@j: 1) when (@j < length(@cols)) {

    .tablet-auto:nth-last-child(@{j}), .tablet-auto:nth-last-child(@{j}) ~ .tablet-auto {
      width: 100% / @j;
    }
    .--((@j + 1));
  } .--;
  }

}
